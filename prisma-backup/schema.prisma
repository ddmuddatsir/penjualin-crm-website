// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(SALES)
  leads     Lead[]   @relation("UserLeads")
  activities Activity[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  SALES
  MANAGER
  ADMIN
}

model Lead {
  id          String         @id @default(uuid())
  name        String
  company     String
  email       String
  status      LeadStatus     @default(OPEN)
  assignedTo  User?          @relation(fields: [assignedToId], references: [id], name: "UserLeads")
  assignedToId String?
  activities  Activity[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  deals       Deal[]
}

enum LeadStatus {
  OPEN
  CONTACTED
  PROPOSAL
  CLOSED
}

model Activity {
  id        String   @id @default(uuid())
  type      ActivityType
  title     String
  date      DateTime
  lead      Lead?    @relation(fields: [leadId], references: [id])
  leadId    String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  notes     String?
  createdAt DateTime @default(now())
}

enum ActivityType {
  MEETING
  CALL
  DEMO
  EMAIL
  TASK
  NOTE
}

enum DealStatus {
  OPEN
  NEGOTIATION
  PROPOSAL_SENT
  ON_HOLD
  WON
  LOST
}

model Deal {
  id        String   @id @default(uuid())
  lead      Lead     @relation(fields: [leadId], references: [id])
  leadId    String
  dealValue Int
  status    DealStatus
  closedAt  DateTime?
  createdAt DateTime @default(now())
}
